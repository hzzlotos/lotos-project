<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="  
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd"
	default-lazy-init="true">

	<!-- 消息中介 -->
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	<!-- 队列目的地 -->
	<bean id="myQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="notifyQueue" />
	</bean>
	<!-- 订阅目的地 -->
	<bean id="myTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg index="0" value="notifyTopic" />
	</bean>

	<!-- Spring 提供了JMS 的模板 jmsTemplate -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<!-- 设置默认的消息目的地 -->
		<property name="defaultDestination" ref="myQueue" />

		<!-- 由于receiver方法是同步的，所以我们在这里对接收设置超时时间 -->
		<property name="receiveTimeout" value="60000" />


		<!--消息转换 -->
		<property name="messageConverter" ref="studentMessageConventer" />
	</bean>

	<!-- 转换消息 -->
	<bean id="studentMessageConventer" class="cn.newtouch.StudentMessageConverter" />

	<!-- 消息发送者 -->
	<bean id="consumer" class="cn.newtouch.springjms.JMSProducer">
		<property name="jmsTemplate" ref="jmsTemplate" />
		<!-- 消息目的地，因为jmsTemplate有默认的了，所以这里可以省略 <property name="destination" ref=" 
			myQueue "/> -->
	</bean>

	<!-- 接收消息，但它是同步的，会发生消息阻塞 -->
	<bean id="receiver" class="cn.newtouch.springjms.JMSReceiver">
		<property name="jmsTemplate" ref="jmsTemplate" />
	</bean>
</beans>