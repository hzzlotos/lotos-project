核心机制
1 java虚拟机(体现出分层思想)
是一种与平台无关的机制 可以跨平台开发

java文件(源文件)---(java编译器)--->class文件(字节码)
--->类装载器--->字节码校验器--->解释器--->操作系统平台

源代码文件通过java编译器翻译成class(字节码)文件，再交由虚拟机运行，
虚拟机根据计算机具体平台转换成其可执行的汇编语言，从而实现了跨平台开发，一次编译，随时运行

解释器，java是解释型的语言
c/c++可以直接编译成操作系统可执行的语言，称之为编译型语言。
而java编译之后成为自己可执行的class文件，需要使用解释器。

2 垃圾回收机制
不再使用C/C++的指针
统一收集垃圾销毁

3
jdk软件开发包
jre运行环境包

4 命令
在环境变量path里面查找其所拥有的目录下是否有与该命令相同名称的.exe文件(可执行文件),有则执行,没有则报错不认识
javac:编译程序命令	javac -encoding UTF-8 XX.java
java:运行程序命令	java cn.newtouch.XX
是在java的jdk路径下的bin目录下的一个javac.exe文件
classpath去找class文件
这里可以自定义一个classpath 如G:classpath 之后在环境配置的CLASSPATH中添加";G:\classpath"
在java类编写的位置进行编译,之后将生成的class文件放置进制定好的classpath中,如有定义包,将class文件按照包名放置
即在G:\classpath下创建cn文件夹,在cn文件夹中再创建newtouch文件夹,之后再放置class文件

5 HolleWorld例子
参照工程java包下的HolleWorld.java
javac D:\eclipse-juno\workSpace\javaExercise\java\HolleWorld.java

6 java总结
一个java类文件中只能有一个public的class
程序的入口是main方法